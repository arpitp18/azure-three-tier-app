{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "extensions_CustomScript_fileUris": {
            "type": "Array"
        },
        "extensions_CustomScript_storageAccountName": {
            "type": "SecureString"
        },
        "extensions_CustomScript_storageAccountKey": {
            "type": "SecureString"
        },
        "extensions_CustomScript_commandToExecute": {
            "type": "SecureString"
        },
        "privateEndpoints_db_pe_name": {
            "defaultValue": "db-pe",
            "type": "String"
        },
        "sshPublicKeys_three_key_name": {
            "defaultValue": "three_key",
            "type": "String"
        },
        "vaults_three_tier_vault_name": {
            "defaultValue": "three-tier-vault",
            "type": "String"
        },
        "sshPublicKeys_backend_key_name": {
            "defaultValue": "backend_key",
            "type": "String"
        },
        "publicIPAddresses_front_pip_name": {
            "defaultValue": "front-pip",
            "type": "String"
        },
        "networkSecurityGroups_db_nsg_name": {
            "defaultValue": "db-nsg",
            "type": "String"
        },
        "virtualNetworks_threetiervent_name": {
            "defaultValue": "threetiervent",
            "type": "String"
        },
        "loadBalancers_frontend_public_lb_name": {
            "defaultValue": "frontend-public-lb",
            "type": "String"
        },
        "networkSecurityGroups_public_nsg_name": {
            "defaultValue": "public-nsg",
            "type": "String"
        },
        "storageAccounts_threetierstorage_name": {
            "defaultValue": "threetierstorage",
            "type": "String"
        },
        "loadBalancers_backend_internal_lb_name": {
            "defaultValue": "backend-internal-lb",
            "type": "String"
        },
        "networkSecurityGroups_bastion_nsg_name": {
            "defaultValue": "bastion-nsg",
            "type": "String"
        },
        "networkSecurityGroups_private_nsg_name": {
            "defaultValue": "private-nsg",
            "type": "String"
        },
        "virtualMachineScaleSets_three_tier_vmss_name": {
            "defaultValue": "three-tier-vmss",
            "type": "String"
        },
        "flexibleServers_goal_tracker_db_name": {
            "defaultValue": "goal-tracker-db",
            "type": "String"
        },
        "virtualMachines_three_tier_vmss_d74d061f_name": {
            "defaultValue": "three-tier-vmss_d74d061f",
            "type": "String"
        },
        "virtualMachineScaleSets_three_tier_backend_name": {
            "defaultValue": "three-tier-backend",
            "type": "String"
        },
        "virtualMachines_three_tier_backend_cb8fe66a_name": {
            "defaultValue": "three-tier-backend_cb8fe66a",
            "type": "String"
        },
        "networkInterfaces_threetiervent_nic01_8e0bbc6a_name": {
            "defaultValue": "threetiervent-nic01-8e0bbc6a",
            "type": "String"
        },
        "userAssignedIdentities_three_tier_user_mi_name": {
            "defaultValue": "three-tier-user-mi",
            "type": "String"
        },
        "networkSecurityGroups_basicNsgthreetiervent_nic01_name": {
            "defaultValue": "basicNsgthreetiervent-nic01",
            "type": "String"
        },
        "networkInterfaces_threetiervent_backend_nic01_827a97a6_name": {
            "defaultValue": "threetiervent-backend-nic01-827a97a6",
            "type": "String"
        },
        "privateDnsZones_privatelink_postgres_database_azure_com_name": {
            "defaultValue": "privatelink.postgres.database.azure.com",
            "type": "String"
        },
        "networkSecurityGroups_basicNsgthreetiervent_backend_nic01_name": {
            "defaultValue": "basicNsgthreetiervent-backend-nic01",
            "type": "String"
        },
        "publicIPAddresses_pip_threetiervent_eastus_private_subnet_name": {
            "defaultValue": "pip-threetiervent-eastus-private-subnet",
            "type": "String"
        },
        "publicIPAddresses_pip_threetiervent_eastus_public_subnet2_name": {
            "defaultValue": "pip-threetiervent-eastus-public-subnet2",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2024-11-01",
            "name": "[parameters('sshPublicKeys_backend_key_name')]",
            "location": "eastus",
            "properties": {
                "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCyxB/vgAANJzECVx6ISWoEnsK4Nc+2+2q4G2p6t10OcZuHprykZaBYZe8am8y07Bb1YexsVh2LEUxaMccZwxlmkGZhCMM6uCYoh9yyFy0ZD3XeiU58LqIfERiCZEe+dObhWpuG0wX4VoLT6qfewa5EZry8cbBMpKI6BvHJ/is83Tp9KmENMyGmEaynszn8lPPAtNT5PPuBF+EqcRFw08Jm5YhyGcvpUhKjHkhylnjOc/JzXA/PDPA5wz+p0s/AAz3Bkxle7Xe6N+/WiifZFbyWXlwq6eYB0EMjinRZI+G/451OOp0Ird+WpLnbcFkxyCKYD/HGU+Br2lcHLwaCJW0ke1vFu3gfF54xwepQW0MP8lR1iQtdcXG7L4tXv2vBfzVkIIDsh8j4SYUhkruAI/sAwm51bwnsdZG1Nff6KNJccS/Vvr3rCVesDkHyQn00rEjMc51JhOJKe6gfA/wU7I/S/U9w89LH3eWm4Z2qio7ix1/HzFfroxe6wrTVt6nvfxk= generated-by-azure"
            }
        },
        {
            "type": "Microsoft.Compute/sshPublicKeys",
            "apiVersion": "2024-11-01",
            "name": "[parameters('sshPublicKeys_three_key_name')]",
            "location": "eastus",
            "properties": {
                "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDdYjTIyWzzjtVeexzJkuq81voB7IOPoQE2yC1uP28f3RmCcVgJjHq0O+cQ5URNqyffwZi22NaOBYcqLECzrEMWBovFo2N0Sul2377UUyT29vx+R0H9jx1I2+SqpHSUMO2NjfTqBOVQf02fbyrJXBykz9mFRTbo+YrzylPpMk/2tQ2xeRZ95ZrbHTzkaVu/Zvsohxh1MLIHoqZHem6pmhVeN04Hw96gBkw6w58Fc3y4yLBg7JyhS2/ACIDzfEA5+ZP+ki6kpjFkn3EKIFbnaa7Kve38+oYzbd9v8iYfyCjRBcNQWNEoi/jETPMEChKxwXA4X5r162s6n9ct7iKk3HkTFTqwmo6D7I2Kd7XlD2AxyhSjTtKYTazUlmkRnMGo/FwLFML/5JT9qS39uU8trJl97sAWYUF2udSLa+eo298wd0JdHZDxHX9m6nGhjjbAzuIeZl65Rq5edI8d8v6eAx7W1WLeuHcD+7f+AxVqLBYIYCjLsJWO+kL38LrX8O3fS0= generated-by-azure"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2025-01-01-preview",
            "name": "[parameters('flexibleServers_goal_tracker_db_name')]",
            "location": "West US",
            "sku": {
                "name": "Standard_B2s",
                "tier": "Burstable"
            },
            "properties": {
                "replica": {
                    "role": "Primary"
                },
                "storage": {
                    "iops": 120,
                    "tier": "P4",
                    "storageSizeGB": 32,
                    "autoGrow": "Disabled"
                },
                "network": {
                    "publicNetworkAccess": "Disabled"
                },
                "dataEncryption": {
                    "type": "SystemManaged"
                },
                "authConfig": {
                    "activeDirectoryAuth": "Enabled",
                    "passwordAuth": "Enabled",
                    "tenantId": "b4c99fb9-fed3-4beb-96e4-bc32c3b56d20"
                },
                "version": "17",
                "administratorLogin": "dbuser",
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                    "mode": "Disabled"
                },
                "maintenanceWindow": {
                    "customWindow": "Disabled",
                    "dayOfWeek": 0,
                    "startHour": 0,
                    "startMinute": 0
                },
                "replicationRole": "Primary"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-12-01-preview",
            "name": "[parameters('vaults_three_tier_vault_name')]",
            "location": "eastus",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "tenantId": "b4c99fb9-fed3-4beb-96e4-bc32c3b56d20",
                "accessPolicies": [],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": true,
                "vaultUri": "[concat('https://', parameters('vaults_three_tier_vault_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2025-01-31-preview",
            "name": "[parameters('userAssignedIdentities_three_tier_user_mi_name')]",
            "location": "eastus"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_basicNsgthreetiervent_backend_nic01_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_basicNsgthreetiervent_nic01_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "Tcp",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_basicNsgthreetiervent_nic01_name'), 'Tcp')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_bastion_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowOnInternet",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_bastion_nsg_name'), 'AllowOnInternet')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowGWManager",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_bastion_nsg_name'), 'AllowGWManager')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "GatewayManager",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAZLoadbalancer",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_bastion_nsg_name'), 'AllowAZLoadbalancer')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowFromVnet",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_bastion_nsg_name'), 'AllowFromVnet')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowOB",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_bastion_nsg_name'), 'AllowOB')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "3389",
                                "8080",
                                "5701"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowCloud",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_bastion_nsg_name'), 'AllowCloud')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_db_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowDB",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_db_nsg_name'), 'AllowDB')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5432",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureService",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_db_nsg_name'), 'AllowAzureService')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_private_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowBackend",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_private_nsg_name'), 'AllowBackend')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-AzureLB-probe",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_private_nsg_name'), 'Allow-AzureLB-probe')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowOutboundInternet",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_private_nsg_name'), 'AllowOutboundInternet')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 220,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowDBConnection",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_private_nsg_name'), 'AllowDBConnection')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "5432",
                            "sourceAddressPrefix": "10.0.2.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 230,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkSecurityGroups_public_nsg_name')]",
            "location": "eastus",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowHTTP",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_public_nsg_name'), 'AllowHTTP')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowHTTPS",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_public_nsg_name'), 'AllowHTTPS')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "TempAllow8080",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_public_nsg_name'), 'TempAllow8080')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "TempAllowOutbound8080",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_public_nsg_name'), 'TempAllowOutbound8080')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow3000",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', parameters('networkSecurityGroups_public_nsg_name'), 'Allow3000')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3000",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 160,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_privatelink_postgres_database_azure_com_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-07-01",
            "name": "[parameters('publicIPAddresses_front_pip_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.190.148.101",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-07-01",
            "name": "[parameters('publicIPAddresses_pip_threetiervent_eastus_private_subnet_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.171.213.130",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-07-01",
            "name": "[parameters('publicIPAddresses_pip_threetiervent_eastus_public_subnet2_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "172.172.145.114",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": [],
                "ddosSettings": {
                    "protectionMode": "VirtualNetworkInherited"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2025-01-01",
            "name": "[parameters('storageAccounts_threetierstorage_name')]",
            "location": "eastus",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2024-11-01",
            "name": "[concat(parameters('virtualMachines_three_tier_vmss_d74d061f_name'), '/CustomScript')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachines_three_tier_vmss_d74d061f_name'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "settings": {
                    "fileUris": "[parameters('extensions_CustomScript_fileUris')]"
                },
                "protectedSettings": {
                    "storageAccountName": "[parameters('extensions_CustomScript_storageAccountName')]",
                    "storageAccountKey": "[parameters('extensions_CustomScript_storageAccountKey')]",
                    "commandToExecute": "[parameters('extensions_CustomScript_commandToExecute')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[concat(parameters('virtualMachineScaleSets_three_tier_backend_name'), '/', parameters('virtualMachineScaleSets_three_tier_backend_name'), '_cb8fe66a')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_three_tier_backend_name'))]"
            ],
            "zones": [
                null
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[concat(parameters('virtualMachineScaleSets_three_tier_vmss_name'), '/', parameters('virtualMachineScaleSets_three_tier_vmss_name'), '_d74d061f')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_three_tier_vmss_name'))]"
            ],
            "zones": [
                null
            ]
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/1e5c7c8e-703d-4644-a759-458d54374378')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "principalType": "User",
                "principalName": "pattani.arpit_outlook.com#EXT#@pattaniarpitoutlook.onmicrosoft.",
                "tenantId": "b4c99fb9-fed3-4beb-96e4-bc32c3b56d20"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/advancedThreatProtectionSettings",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/backups",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/backup_638955115203035904')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ]
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/allow_alter_system')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/allow_in_place_tablespaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/allow_system_table_mods')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.algorithm')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "sha256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.k_anonymity_provider')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "k_anonymity",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.masking_policies')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "anon",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.maskschema')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "mask",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.privacy_by_default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.restrict_to_trusted_schemas')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.salt')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.sourceschema')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "public",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.strict_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/anon.transparent_dynamic_masking')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/application_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/archive_cleanup_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/archive_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "BlobLogUpload.sh %f %p",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/archive_library')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/archive_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "always",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/archive_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "300",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/array_nulls')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/authentication_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_analyze')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_format')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "text",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_min_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_nested_statements')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_parameter_max_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_settings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_triggers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_verbose')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.log_wal')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/auto_explain.sample_rate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_analyze_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_analyze_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "200000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_max_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_multixact_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "400000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_naptime')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "60",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_vacuum_insert_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_vacuum_insert_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_vacuum_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_vacuum_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/autovacuum_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.accepted_password_auth_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "md5,scram-sha-256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.enable_temp_tablespaces_on_local_ssd')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.extensions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.migration_copy_with_binary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.migration_skip_analyze')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.migration_skip_extensions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.migration_skip_large_objects')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.migration_skip_role_user')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.migration_table_split_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "20480",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.service_principal_id')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.service_principal_tenant_id')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure.single_to_flex_migration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.change_batch_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "16",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.change_batch_export_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.max_fabric_mirrors')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.max_snapshot_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.onelake_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.parquet_compression')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "zstd",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.snapshot_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_cdc.snapshot_export_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "180",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_storage.allow_network_access')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_storage.blob_block_size_mb')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_storage.log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_storage.public_account_access')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/backend_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/backslash_quote')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "safe_encoding",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/backtrace_functions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bgwriter_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bgwriter_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bgwriter_lru_maxpages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bgwriter_lru_multiplier')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/block_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bonjour')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bonjour_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/bytea_output')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "hex",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/check_function_bodies')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/checkpoint_completion_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.9",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/checkpoint_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/checkpoint_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "600",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/checkpoint_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/client_connection_check_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/client_encoding')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "UTF8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/client_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "notice",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cluster_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/commit_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/commit_siblings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/commit_timestamp_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/compute_query_id')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "auto",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/config_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data/postgresql.conf",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.bucket_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.enable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.factor_bias')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.hash_entries_max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "500",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.reset_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "120",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.restore_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/connection_throttle.update_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/constraint_exclusion')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "partition",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cpu_index_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.005",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cpu_operator_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.0025",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cpu_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.01",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/createrole_self_grant')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.database_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.enable_superuser_jobs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.host')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/tmp",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.launch_active_jobs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.log_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "warning",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.log_run')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.max_running_jobs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.timezone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "GMT",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cron.use_background_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/cursor_tuple_fraction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/data_checksums')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/data_directory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/data_directory_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0700",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/data_sync_retry')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/DateStyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "ISO, MDY",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/db_user_namespace')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/deadlock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_assertions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_discard_caches')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_io_direct')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_logical_replication_streaming')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "buffered",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_parallel_query')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_pretty_print')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_print_parse')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_print_plan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/debug_print_rewritten')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_statistics_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_table_access_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "heap",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_tablespace')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_text_search_config')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "pg_catalog.english",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_toast_compression')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "pglz",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_transaction_deferrable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_transaction_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "read committed",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/default_transaction_read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/duckdb.max_memory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/duckdb.max_workers_per_postgres_scan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/duckdb.memory_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/duckdb.threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/duckdb.worker_threads')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/dynamic_library_path')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "$libdir",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/dynamic_shared_memory_type')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "posix",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/effective_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "393216",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/effective_io_concurrency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_async_append')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_bitmapscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_gathermerge')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_group_by_reordering')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_hashagg')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_hashjoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_incremental_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_indexonlyscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_indexscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_material')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_memoize')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_mergejoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_nestloop')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_parallel_append')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_parallel_hash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_partition_pruning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_partitionwise_aggregate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_partitionwise_join')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_presorted_aggregate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_seqscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/enable_tidscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/escape_string_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/event_source')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "PostgreSQL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/event_triggers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/exit_on_error')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/external_pid_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/extra_float_digits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/from_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/fsync')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/full_page_writes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo_effort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo_generations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo_pool_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo_seed')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo_selection_bias')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/geqo_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "12",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/gin_fuzzy_search_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/gin_pending_list_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/gss_accept_delegation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/hash_mem_multiplier')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/hba_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data/pg_hba.conf",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/hot_standby')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/hot_standby_feedback')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/huge_page_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/huge_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "try",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/huge_pages_status')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/icu_validation_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "warning",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ident_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data/pg_ident.conf",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/idle_in_transaction_session_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/idle_session_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ignore_checksum_failure')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ignore_invalid_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ignore_system_indexes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/in_hot_standby')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/integer_datetimes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/intelligent_tuning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/intelligent_tuning.metric_targets')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/IntervalStyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/io_combine_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "16",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_above_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "100000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_debugging_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_dump_bitcode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_expressions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_inline_above_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "500000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_optimize_above_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "500000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_profiling_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_provider')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "llvmjit",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/jit_tuple_deforming')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/join_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/krb_caseins_users')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/krb_server_keyfile')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/lc_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "en_US.utf8",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/lc_monetary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "en_US.utf-8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/lc_numeric')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "en_US.utf-8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/lc_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "en_US.utf8",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/listen_addresses')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "*",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/lo_compat_privileges')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/local_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/lock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_autovacuum_min_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_checkpoints')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_destination')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "stderr",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_directory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_disconnections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_error_verbosity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "default",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_executor_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_file_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0600",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_filename')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "postgresql-%Y-%m-%d_%H%M%S.log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_hostname')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_line_prefix')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "%t-%c-",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_lock_waits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_min_duration_sample')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_min_duration_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_min_error_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "error",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "warning",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_parameter_max_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_parameter_max_length_on_error')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_parser_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_planner_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_recovery_conflict_waits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_replication_commands')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_rotation_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "60",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_rotation_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "102400",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_startup_progress_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_statement_sample_rate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_statement_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_temp_files')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_timezone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "UTC",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_transaction_sample_rate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/log_truncate_on_rotation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/logfiles.download_enable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/logfiles.retention_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/logging_collector')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/logical_decoding_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "65536",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/maintenance_io_concurrency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/maintenance_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "157696",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "429",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_files_per_process')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_function_args')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_identifier_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "63",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_index_keys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_locks_per_transaction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_logical_replication_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_notify_queue_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1048576",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_parallel_apply_workers_per_subscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_parallel_maintenance_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_parallel_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_parallel_workers_per_gather')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_pred_locks_per_page')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_pred_locks_per_relation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_pred_locks_per_transaction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_prepared_transactions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_replication_slots')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_slot_wal_keep_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_stack_depth')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_standby_archive_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_standby_streaming_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_sync_workers_per_subscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_wal_senders')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/max_worker_processes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/metrics.autovacuum_diagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/metrics.collector_database_activity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/metrics.pgbouncer_diagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/min_dynamic_shared_memory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/min_parallel_index_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/min_parallel_table_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/min_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "80",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/multixact_member_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/multixact_offset_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "16",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/notify_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "16",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/parallel_leader_participation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/parallel_setup_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/parallel_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/password_encryption')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "scram-sha-256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_hint_plan.debug_print')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_hint_plan.enable_hint')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_hint_plan.enable_hint_table')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_hint_plan.message_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_hint_plan.parse_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "info",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_partman_bgw.analyze')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_partman_bgw.dbname')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_partman_bgw.interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "3600",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_partman_bgw.jobmon')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_partman_bgw.maintenance_wait')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_partman_bgw.role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_prewarm.autoprewarm')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_prewarm.autoprewarm_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "300",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.interval_length_minutes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.is_enabled_fs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.max_captured_queries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "500",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.max_plan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "7500",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.max_query_text_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "6000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.parameters_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "capture_parameterless_only",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.retention_period_in_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "7",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.store_query_plans')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_qs.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_stat_statements.max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_stat_statements.save')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_stat_statements.track')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_stat_statements.track_planning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pg_stat_statements.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaadauth.enable_group_sync')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_catalog')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_client')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_parameter')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_parameter_max_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_relation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_rows')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.log_statement_once')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgaudit.role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.batch_inserts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.conflict_log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.conflict_resolution')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "apply_remote",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.extra_connection_options')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.synchronous_commit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.temp_directory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pglogical.use_spi')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgms_stats.is_enabled_fs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgms_wait_sampling.history_period')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgms_wait_sampling.is_enabled_fs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pgms_wait_sampling.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/plan_cache_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "auto",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/port')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5432",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/post_auth_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/postgis.gdal_enabled_drivers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "DISABLE_ALL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/pre_auth_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/primary_conninfo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/primary_slot_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/quote_all_identifiers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/random_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_end_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_init_sync_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "fsync",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_min_apply_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_prefetch')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "try",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_action')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "pause",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_inclusive')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_lsn')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_timeline')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "latest",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recovery_target_xid')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/recursive_worktable_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/remove_temp_files_after_crash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/require_secure_transport')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/reserved_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/restart_after_crash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/restore_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/restrict_nonsystem_relation_kind')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/row_security')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/scram_iterations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/search_path')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "\"$user\", public",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/segment_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "131072",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/send_abort_for_crash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/send_abort_for_kill')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/seq_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/serializable_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/server_encoding')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "UTF8",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/server_version')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "17.6",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/server_version_num')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "170006",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/session_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/session_replication_role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "origin",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/shared_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "131072",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/shared_memory_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1127",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/shared_memory_size_in_huge_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "564",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/shared_memory_type')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "mmap",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/shared_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "pg_cron,pg_stat_statements",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/squeeze.max_xlock_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/squeeze.worker_autostart')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/squeeze.worker_role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/squeeze.workers_per_database')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_ca_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/certs/ca.pem",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_cert_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/certs/cert.pem",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_ciphers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_crl_dir')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_crl_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_dh_params_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_ecdh_curve')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "prime256v1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_key_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/datadrive/certs/key.pem",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_library')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "OpenSSL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_max_protocol_version')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_min_protocol_version')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "TLSv1.2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_passphrase_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_passphrase_command_supports_reload')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ssl_prefer_server_ciphers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/standard_conforming_strings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/statement_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/stats_fetch_consistency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "cache",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/subtransaction_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/summarize_wal')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/superuser_reserved_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/sync_replication_slots')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/synchronize_seqscans')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/synchronized_standby_slots')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/synchronous_commit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/synchronous_standby_names')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/syslog_facility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "local0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/syslog_ident')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/syslog_sequence_numbers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/syslog_split_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/tcp_keepalives_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "9",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/tcp_keepalives_idle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "120",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/tcp_keepalives_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/tcp_user_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/temp_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/temp_file_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/temp_tablespaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/timescaledb.bgw_launcher_poll_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "60000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/timescaledb.disable_load')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/timescaledb.max_background_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "16",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/timescaledb_osm.disable_load')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/TimeZone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "UTC",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/timezone_abbreviations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "Default",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/trace_connection_negotiation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/trace_notify')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/trace_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_activities')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_activity_query_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_commit_timestamp')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_counts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_functions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_io_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/track_wal_io_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/transaction_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/transaction_deferrable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/transaction_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "read committed",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/transaction_read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/transaction_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/transform_null_equals')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/unix_socket_directories')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "/tmp,/tmp/tuning_sockets",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/unix_socket_group')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/unix_socket_permissions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0777",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/update_process_title')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_buffer_usage_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_cost_page_dirty')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_cost_page_hit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_cost_page_miss')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_failsafe_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1600000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "50000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_multixact_failsafe_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "1600000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_multixact_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/vacuum_multixact_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_block_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_compression')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_consistency_checking')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_decode_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "524288",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_init_zero')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_keep_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "400",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "replica",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_log_hints')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_receiver_create_temp_slot')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_receiver_status_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_receiver_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "60000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_recycle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_retrieve_retry_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_segment_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "16777216",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_sender_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "60000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_skip_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_summary_keep_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "14400",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_sync_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "fdatasync",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_writer_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/wal_writer_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/xmlbinary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "base64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/xmloption')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "content",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/zero_damaged_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_maintenance')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/azure_sys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/goalsdb')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/postgres')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/AllowAllAzureServicesAndResourcesWithinAzureIps_2025-10-8_14-35-54')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/ClientIPAddress_2025-10-8_15-37-2')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "startIpAddress": "203.187.194.23",
                "endIpAddress": "203.187.194.23"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/privateEndpointConnections",
            "apiVersion": "2025-01-01-preview",
            "name": "[concat(parameters('flexibleServers_goal_tracker_db_name'), '/db-pe.9d161401-bd36-4233-b335-a3c9dd74e21b')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]"
            ],
            "properties": {
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-Approved",
                    "actionsRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_three_tier_vault_name'), '/db-host')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_three_tier_vault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_three_tier_vault_name'), '/db-name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_three_tier_vault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_three_tier_vault_name'), '/db-password')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_three_tier_vault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_three_tier_vault_name'), '/db-port')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_three_tier_vault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_three_tier_vault_name'), '/db-sslmode')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_three_tier_vault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-12-01-preview",
            "name": "[concat(parameters('vaults_three_tier_vault_name'), '/db-username')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_three_tier_vault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2024-07-01",
            "name": "[parameters('loadBalancers_backend_internal_lb_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "private-ip",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_backend_internal_lb_name')), '/frontendIPConfigurations/private-ip')]",
                        "properties": {
                            "privateIPAddress": "10.0.2.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]"
                            },
                            "privateIPAddressVersion": "IPv4"
                        },
                        "zones": [
                            "3",
                            "1",
                            "2"
                        ]
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "internal-lb-backendpool",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "b29d73cb-57ce-4d16-b785-e96e96c0eaa4",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "lb-rule-backend",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_backend_internal_lb_name')), '/loadBalancingRules/lb-rule-backend')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_backend_internal_lb_name')), '/frontendIPConfigurations/private-ip')]"
                            },
                            "frontendPort": 8080,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "enableConnectionTracking": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_backend_internal_lb_name')), '/probes/backend-health')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "backend-health",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_backend_internal_lb_name')), '/probes/backend-health')]",
                        "properties": {
                            "protocol": "Http",
                            "port": 8080,
                            "requestPath": "/health",
                            "intervalInSeconds": 8,
                            "numberOfProbes": 1,
                            "probeThreshold": 1,
                            "noHealthyBackendsBehavior": "AllProbedDown"
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2024-07-01",
            "name": "[parameters('loadBalancers_frontend_public_lb_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_front_pip_name'))]"
            ],
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "frontend-lb-ip",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_frontend_public_lb_name')), '/frontendIPConfigurations/frontend-lb-ip')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIPAddresses_front_pip_name'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "front-backend-pool",
                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]",
                        "properties": {
                            "loadBalancerBackendAddresses": [
                                {
                                    "name": "7543241f-c14d-490f-a0ad-57f5c8ec3332",
                                    "properties": {}
                                }
                            ]
                        }
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "front-lb-rule",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_frontend_public_lb_name')), '/loadBalancingRules/front-lb-rule')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_frontend_public_lb_name')), '/frontendIPConfigurations/frontend-lb-ip')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "disableOutboundSnat": true,
                            "enableConnectionTracking": false,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]"
                            },
                            "backendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]"
                                }
                            ],
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_frontend_public_lb_name')), '/probes/frontend-probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "frontend-probe",
                        "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_frontend_public_lb_name')), '/probes/frontend-probe')]",
                        "properties": {
                            "protocol": "Http",
                            "port": 80,
                            "requestPath": "/",
                            "intervalInSeconds": 5,
                            "numberOfProbes": 1,
                            "probeThreshold": 1,
                            "noHealthyBackendsBehavior": "AllProbedDown"
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundRules": [],
                "inboundNatPools": []
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('loadBalancers_frontend_public_lb_name'), '/front-backend-pool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_frontend_public_lb_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "7543241f-c14d-490f-a0ad-57f5c8ec3332",
                        "properties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers/backendAddressPools",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('loadBalancers_backend_internal_lb_name'), '/internal-lb-backendpool')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancers_backend_internal_lb_name'))]"
            ],
            "properties": {
                "loadBalancerBackendAddresses": [
                    {
                        "name": "b29d73cb-57ce-4d16-b785-e96e96c0eaa4",
                        "properties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_public_nsg_name'), '/Allow3000')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "3000",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 160,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_bastion_nsg_name'), '/AllowAZLoadbalancer')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 120,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_private_nsg_name'), '/Allow-AzureLB-probe')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "AzureLoadBalancer",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 210,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_db_nsg_name'), '/AllowAzureService')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 300,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_private_nsg_name'), '/AllowBackend')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 200,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_bastion_nsg_name'), '/AllowCloud')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "AzureCloud",
                "access": "Allow",
                "priority": 150,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_db_nsg_name'), '/AllowDB')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "5432",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_private_nsg_name'), '/AllowDBConnection')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "5432",
                "sourceAddressPrefix": "10.0.2.0/24",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 230,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_bastion_nsg_name'), '/AllowFromVnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 130,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [
                    "8080",
                    "5701"
                ],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_bastion_nsg_name'), '/AllowGWManager')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "GatewayManager",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_public_nsg_name'), '/AllowHTTP')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_public_nsg_name'), '/AllowHTTPS')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 110,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_bastion_nsg_name'), '/AllowOB')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "VirtualNetwork",
                "access": "Allow",
                "priority": 140,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [
                    "22",
                    "3389",
                    "8080",
                    "5701"
                ],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_bastion_nsg_name'), '/AllowOnInternet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_bastion_nsg_name'))]"
            ],
            "properties": {
                "protocol": "TCP",
                "sourcePortRange": "*",
                "destinationPortRange": "443",
                "sourceAddressPrefix": "Internet",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 100,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_private_nsg_name'), '/AllowOutboundInternet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "Internet",
                "access": "Allow",
                "priority": 220,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_basicNsgthreetiervent_nic01_name'), '/Tcp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_basicNsgthreetiervent_nic01_name'))]"
            ],
            "properties": {
                "protocol": "Tcp",
                "sourcePortRange": "*",
                "destinationPortRange": "80",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 300,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_public_nsg_name'), '/TempAllow8080')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "*",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 140,
                "direction": "Inbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups/securityRules",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('networkSecurityGroups_public_nsg_name'), '/TempAllowOutbound8080')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "properties": {
                "protocol": "*",
                "sourcePortRange": "*",
                "destinationPortRange": "8080",
                "sourceAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefix": "*",
                "access": "Allow",
                "priority": 150,
                "direction": "Outbound",
                "sourcePortRanges": [],
                "destinationPortRanges": [],
                "sourceAddressPrefixes": [],
                "destinationAddressPrefixes": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/goal-tracker-db')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": "created by private endpoint db-pe with resource guid 1a990164-5870-4f13-b260-e1bc774d301f"
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.3.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/three-tiebaj5r5')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.1.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/three-tieejsck6')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.2.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_threetierstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_threetierstorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_threetierstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_threetierstorage_name'))]"
            ],
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_threetierstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_threetierstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_threetierstorage_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_threetierstorage_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachines_three_tier_backend_cb8fe66a_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_three_tier_backend_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_threetiervent_backend_nic01_827a97a6_name'))]"
            ],
            "tags": {
                "VirtualMachineProfileTimeCreated": "10/8/2025 8:25:50 AM +00:00"
            },
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "/subscriptions/ae664dcd-dcfb-44a7-9c6e-a9f1408975ff/resourceGroups/threetierdemo/providers/Microsoft.ManagedIdentity/userAssignedIdentities/three-tier-user-mi": {}
                }
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2ps_v6"
                },
                "virtualMachineScaleSet": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_three_tier_backend_name'))]"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-arm64",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_three_tier_backend_cb8fe66a_name'), '_OsDisk_1_40337fed11ae4b35bf1b7af63ccff2b5')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_three_tier_backend_cb8fe66a_name'), '_OsDisk_1_40337fed11ae4b35bf1b7af63ccff2b5'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "three-tieEJSCK6",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCyxB/vgAANJzECVx6ISWoEnsK4Nc+2+2q4G2p6t10OcZuHprykZaBYZe8am8y07Bb1YexsVh2LEUxaMccZwxlmkGZhCMM6uCYoh9yyFy0ZD3XeiU58LqIfERiCZEe+dObhWpuG0wX4VoLT6qfewa5EZry8cbBMpKI6BvHJ/is83Tp9KmENMyGmEaynszn8lPPAtNT5PPuBF+EqcRFw08Jm5YhyGcvpUhKjHkhylnjOc/JzXA/PDPA5wz+p0s/AAz3Bkxle7Xe6N+/WiifZFbyWXlwq6eYB0EMjinRZI+G/451OOp0Ird+WpLnbcFkxyCKYD/HGU+Br2lcHLwaCJW0ke1vFu3gfF54xwepQW0MP8lR1iQtdcXG7L4tXv2vBfzVkIIDsh8j4SYUhkruAI/sAwm51bwnsdZG1Nff6KNJccS/Vvr3rCVesDkHyQn00rEjMc51JhOJKe6gfA/wU7I/S/U9w89LH3eWm4Z2qio7ix1/HzFfroxe6wrTVt6nvfxk= generated-by-azure"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_threetiervent_backend_nic01_827a97a6_name'))]",
                            "properties": {
                                "primary": true,
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachines_three_tier_vmss_d74d061f_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_three_tier_vmss_name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_threetiervent_nic01_8e0bbc6a_name'))]"
            ],
            "tags": {
                "VirtualMachineProfileTimeCreated": "10/7/2025 1:24:27 PM +00:00"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2ps_v6"
                },
                "virtualMachineScaleSet": {
                    "id": "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('virtualMachineScaleSets_three_tier_vmss_name'))]"
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts-arm64",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(parameters('virtualMachines_three_tier_vmss_d74d061f_name'), '_OsDisk_1_745ad4d6d42644d2b26b2fe560ed5a0c')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS",
                            "id": "[resourceId('Microsoft.Compute/disks', concat(parameters('virtualMachines_three_tier_vmss_d74d061f_name'), '_OsDisk_1_745ad4d6d42644d2b26b2fe560ed5a0c'))]"
                        },
                        "deleteOption": "Delete",
                        "diskSizeGB": 30
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },
                "osProfile": {
                    "computerName": "three-tieBAJ5R5",
                    "adminUsername": "azureuser",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "/home/azureuser/.ssh/authorized_keys",
                                    "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDdYjTIyWzzjtVeexzJkuq81voB7IOPoQE2yC1uP28f3RmCcVgJjHq0O+cQ5URNqyffwZi22NaOBYcqLECzrEMWBovFo2N0Sul2377UUyT29vx+R0H9jx1I2+SqpHSUMO2NjfTqBOVQf02fbyrJXBykz9mFRTbo+YrzylPpMk/2tQ2xeRZ95ZrbHTzkaVu/Zvsohxh1MLIHoqZHem6pmhVeN04Hw96gBkw6w58Fc3y4yLBg7JyhS2/ACIDzfEA5+ZP+ki6kpjFkn3EKIFbnaa7Kve38+oYzbd9v8iYfyCjRBcNQWNEoi/jETPMEChKxwXA4X5r162s6n9ct7iKk3HkTFTqwmo6D7I2Kd7XlD2AxyhSjTtKYTazUlmkRnMGo/FwLFML/5JT9qS39uU8trJl97sAWYUF2udSLa+eo298wd0JdHZDxHX9m6nGhjjbAzuIeZl65Rq5edI8d8v6eAx7W1WLeuHcD+7f+AxVqLBYIYCjLsJWO+kL38LrX8O3fS0= generated-by-azure"
                                }
                            ]
                        },
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true,
                    "requireGuestProvisionSignal": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_threetiervent_nic01_8e0bbc6a_name'))]",
                            "properties": {
                                "primary": true,
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'), '/pvtdnszone-vnet-link')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_threetiervent_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "resolutionPolicy": "Default",
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_threetiervent_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-07-01",
            "name": "[parameters('privateEndpoints_db_pe_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'db-subnet')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoints_db_pe_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_db_pe_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_db_pe_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_goal_tracker_db_name'))]",
                            "groupIds": [
                                "postgresqlServer"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "customNetworkInterfaceName": "[concat(parameters('privateEndpoints_db_pe_name'), '-nic')]",
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'db-subnet')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('privateEndpoints_db_pe_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_db_pe_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "privatelink-postgres-database-azure-com",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_privatelink_postgres_database_azure_com_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('virtualNetworks_threetiervent_name'), '/db-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_threetiervent_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db_nsg_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.3.0/24"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db_nsg_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "NetworkSecurityGroupEnabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('virtualNetworks_threetiervent_name'), '/private-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_threetiervent_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.2.0/24"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "defaultOutboundAccess": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-07-01",
            "name": "[concat(parameters('virtualNetworks_threetiervent_name'), '/public-subnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_threetiervent_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.1.0/24"
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
                },
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2025-01-01",
            "name": "[concat(parameters('storageAccounts_threetierstorage_name'), '/default/script')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccounts_threetierstorage_name'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_threetierstorage_name'))]"
            ],
            "properties": {
                "immutableStorageWithVersioning": {
                    "enabled": false
                },
                "defaultEncryptionScope": "$account-encryption-key",
                "denyEncryptionScopeOverride": false,
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachineScaleSets_three_tier_backend_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_basicNsgthreetiervent_backend_nic01_name'))]"
            ],
            "sku": {
                "name": "Standard_D2ps_v6",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "singlePlacementGroup": false,
                "orchestrationMode": "Flexible",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "scaleInPolicy": {
                    "rules": [
                        "Default"
                    ],
                    "forceDeletion": false
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "three-tie",
                        "adminUsername": "azureuser",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/azureuser/.ssh/authorized_keys",
                                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCyxB/vgAANJzECVx6ISWoEnsK4Nc+2+2q4G2p6t10OcZuHprykZaBYZe8am8y07Bb1YexsVh2LEUxaMccZwxlmkGZhCMM6uCYoh9yyFy0ZD3XeiU58LqIfERiCZEe+dObhWpuG0wX4VoLT6qfewa5EZry8cbBMpKI6BvHJ/is83Tp9KmENMyGmEaynszn8lPPAtNT5PPuBF+EqcRFw08Jm5YhyGcvpUhKjHkhylnjOc/JzXA/PDPA5wz+p0s/AAz3Bkxle7Xe6N+/WiifZFbyWXlwq6eYB0EMjinRZI+G/451OOp0Ird+WpLnbcFkxyCKYD/HGU+Br2lcHLwaCJW0ke1vFu3gfF54xwepQW0MP8lR1iQtdcXG7L4tXv2vBfzVkIIDsh8j4SYUhkruAI/sAwm51bwnsdZG1Nff6KNJccS/Vvr3rCVesDkHyQn00rEjMc51JhOJKe6gfA/wU7I/S/U9w89LH3eWm4Z2qio7ix1/HzFfroxe6wrTVt6nvfxk= generated-by-azure"
                                    }
                                ]
                            },
                            "provisionVMAgent": true,
                            "patchSettings": {
                                "patchMode": "ImageDefault",
                                "assessmentMode": "ImageDefault"
                            }
                        },
                        "secrets": [],
                        "allowExtensionOperations": true,
                        "requireGuestProvisionSignal": true
                    },
                    "storageProfile": {
                        "osDisk": {
                            "osType": "Linux",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "deleteOption": "Delete",
                            "diskSizeGB": 30
                        },
                        "imageReference": {
                            "publisher": "canonical",
                            "offer": "0001-com-ubuntu-server-jammy",
                            "sku": "22_04-lts-arm64",
                            "version": "latest"
                        },
                        "diskControllerType": "SCSI"
                    },
                    "networkProfile": {
                        "networkApiVersion": "2020-11-01",
                        "networkInterfaceConfigurations": [
                            {
                                "name": "threetiervent-backend-nic01",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "disableTcpStateTracking": false,
                                    "enableIPForwarding": false,
                                    "auxiliaryMode": "None",
                                    "auxiliarySku": "None",
                                    "deleteOption": "Delete",
                                    "ipConfigurations": [
                                        {
                                            "name": "threetiervent-backend-nic01-defaultIpConfiguration",
                                            "properties": {
                                                "privateIPAddressVersion": "IPv4",
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]"
                                                },
                                                "primary": true,
                                                "applicationSecurityGroups": [],
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]"
                                                    }
                                                ],
                                                "applicationGatewayBackendAddressPools": []
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_basicNsgthreetiervent_backend_nic01_name'))]"
                                    },
                                    "dnsSettings": {
                                        "dnsServers": []
                                    }
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true
                        }
                    },
                    "extensionProfile": {
                        "extensions": []
                    }
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "platformFaultDomainCount": 1,
                "constrainedMaximumCapacity": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2024-11-01",
            "name": "[parameters('virtualMachineScaleSets_three_tier_vmss_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'public-subnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_basicNsgthreetiervent_nic01_name'))]"
            ],
            "sku": {
                "name": "Standard_D2ps_v6",
                "tier": "Standard",
                "capacity": 1
            },
            "properties": {
                "singlePlacementGroup": false,
                "orchestrationMode": "Flexible",
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "scaleInPolicy": {
                    "rules": [
                        "Default"
                    ],
                    "forceDeletion": false
                },
                "virtualMachineProfile": {
                    "osProfile": {
                        "computerNamePrefix": "three-tie",
                        "adminUsername": "azureuser",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": true,
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "/home/azureuser/.ssh/authorized_keys",
                                        "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDDdYjTIyWzzjtVeexzJkuq81voB7IOPoQE2yC1uP28f3RmCcVgJjHq0O+cQ5URNqyffwZi22NaOBYcqLECzrEMWBovFo2N0Sul2377UUyT29vx+R0H9jx1I2+SqpHSUMO2NjfTqBOVQf02fbyrJXBykz9mFRTbo+YrzylPpMk/2tQ2xeRZ95ZrbHTzkaVu/Zvsohxh1MLIHoqZHem6pmhVeN04Hw96gBkw6w58Fc3y4yLBg7JyhS2/ACIDzfEA5+ZP+ki6kpjFkn3EKIFbnaa7Kve38+oYzbd9v8iYfyCjRBcNQWNEoi/jETPMEChKxwXA4X5r162s6n9ct7iKk3HkTFTqwmo6D7I2Kd7XlD2AxyhSjTtKYTazUlmkRnMGo/FwLFML/5JT9qS39uU8trJl97sAWYUF2udSLa+eo298wd0JdHZDxHX9m6nGhjjbAzuIeZl65Rq5edI8d8v6eAx7W1WLeuHcD+7f+AxVqLBYIYCjLsJWO+kL38LrX8O3fS0= generated-by-azure"
                                    }
                                ]
                            },
                            "provisionVMAgent": true,
                            "patchSettings": {
                                "patchMode": "ImageDefault",
                                "assessmentMode": "ImageDefault"
                            }
                        },
                        "secrets": [],
                        "allowExtensionOperations": true,
                        "requireGuestProvisionSignal": true
                    },
                    "storageProfile": {
                        "osDisk": {
                            "osType": "Linux",
                            "createOption": "FromImage",
                            "caching": "ReadWrite",
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "deleteOption": "Delete",
                            "diskSizeGB": 30
                        },
                        "imageReference": {
                            "publisher": "canonical",
                            "offer": "0001-com-ubuntu-server-jammy",
                            "sku": "22_04-lts-arm64",
                            "version": "latest"
                        },
                        "diskControllerType": "SCSI"
                    },
                    "networkProfile": {
                        "networkApiVersion": "2020-11-01",
                        "networkInterfaceConfigurations": [
                            {
                                "name": "threetiervent-nic01",
                                "properties": {
                                    "primary": true,
                                    "enableAcceleratedNetworking": false,
                                    "disableTcpStateTracking": false,
                                    "enableIPForwarding": false,
                                    "auxiliaryMode": "None",
                                    "auxiliarySku": "None",
                                    "deleteOption": "Delete",
                                    "ipConfigurations": [
                                        {
                                            "name": "threetiervent-nic01-defaultIpConfiguration",
                                            "properties": {
                                                "privateIPAddressVersion": "IPv4",
                                                "subnet": {
                                                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'public-subnet')]"
                                                },
                                                "primary": true,
                                                "applicationSecurityGroups": [],
                                                "loadBalancerBackendAddressPools": [
                                                    {
                                                        "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]"
                                                    }
                                                ],
                                                "applicationGatewayBackendAddressPools": []
                                            }
                                        }
                                    ],
                                    "networkSecurityGroup": {
                                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_basicNsgthreetiervent_nic01_name'))]"
                                    },
                                    "dnsSettings": {
                                        "dnsServers": []
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": []
                    }
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "platformFaultDomainCount": 1,
                "constrainedMaximumCapacity": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkInterfaces_threetiervent_backend_nic01_827a97a6_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
            ],
            "tags": {
                "fastpathenabled": "True"
            },
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "threetiervent-backend-nic01-defaultIpConfiguration",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_threetiervent_backend_nic01_827a97a6_name')), '/ipConfigurations/threetiervent-backend-nic01-defaultIpConfiguration')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.0.2.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_backend_internal_lb_name'), 'internal-lb-backendpool')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-07-01",
            "name": "[parameters('networkInterfaces_threetiervent_nic01_8e0bbc6a_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'public-subnet')]",
                "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
            ],
            "tags": {
                "fastpathenabled": "True"
            },
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "threetiervent-nic01-defaultIpConfiguration",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaces_threetiervent_nic01_8e0bbc6a_name')), '/ipConfigurations/threetiervent-nic01-defaultIpConfiguration')]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.0.1.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'public-subnet')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', parameters('loadBalancers_frontend_public_lb_name'), 'front-backend-pool')]"
                                }
                            ]
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
                },
                "nicType": "Standard",
                "auxiliaryMode": "None",
                "auxiliarySku": "None"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-07-01",
            "name": "[parameters('virtualNetworks_threetiervent_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db_nsg_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "privateEndpointVNetPolicies": "Disabled",
                "subnets": [
                    {
                        "name": "public-subnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'public-subnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.1.0/24"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_public_nsg_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "private-subnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'private-subnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.2.0/24"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_private_nsg_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled",
                            "defaultOutboundAccess": false
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "db-subnet",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_threetiervent_name'), 'db-subnet')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.3.0/24"
                            ],
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_db_nsg_name'))]"
                            },
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "NetworkSecurityGroupEnabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        }
    ]
}